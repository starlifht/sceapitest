package star.test.api;



import java.beans.Encoder;
import java.net.URLEncoder;
import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.*;
import junit.framework.TestCase;
import net.sf.json.JSONObject;

import org.apache.http.util.EncodingUtils;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import star.api.methods.HttpClientUtil;
import star.test.methods.Params;

public class OtherOpenTest {
	public static final String  DOMAIN=Params.DOMAIN; //  sohutest.apps.sohuno.com
	//public static final String  DOMAIN="http://sohutest.apps.sohuno.com";
	//public static final String  DOMAIN="http://openapi-test.apps.sohuno.com";
	public static final String  ACCESS_TOKEN=Params.ACCESS_TOKEN;//测试
	//public static final String  ACCESS_TOKEN="97043a103dfa54b2344b741300459a8e";//线上
	public static final String APPID=Params.APPID;
//	 public OtherOpenTest (String name){
//		  super(name);
//		 }//注意这里添加了这个构造函数，因为要调用父类的构造函数，用于下面Suite添加该类的测试方法
	public OtherOpenTest() {
	}

	@Before
	public void setUp() throws Exception {
	}

	@After
	public void tearDown() throws Exception {
	}
//===================================LOG=======================================
	@Test
	public void getAppLogs() {//获取日志
		try {
			Map<String,String> data =new HashMap<String ,String>();
			data.put("appid", Params.APPID);
			data.put("begin_time", URLEncoder.encode("2014-04-23 19:55:02","utf-8"));
			data.put("end_time", URLEncoder.encode("2014-04-23 19:55:02","utf-8"));
			data.put("key_words", "test");
			data.put("cur_page", "2");
			data.put("page_size", "33");
			data.put("log_type", "app");//audit|app|access
			String response= HttpClientUtil
					.doGet(Params.DOMAIN+"/logs/apps/"+Params.APPID+"?access_token="+Params.ACCESS_TOKEN,data);
			System.out.print(response);
			if(!JSONObject.fromObject(response).getString("code").equals("1000")){
				fail(response);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
}
	@Test
	public void getSystemLogs() {//充值
		try {
			Map<String,String> data =new HashMap<String ,String>();
			data.put("key_words", "test");
			data.put("cur_page", "2");
			data.put("page_size", "33");
			data.put("order_type", "asc");//asc | desc   default desc 
			data.put("begin_time", URLEncoder.encode("2014-04-23 19:55:02","utf-8"));
			data.put("end_time", URLEncoder.encode("2014-04-23 19:55:02","utf-8"));
			String response= HttpClientUtil
					.doGet(Params.DOMAIN+"/logs/system?access_token="+Params.ACCESS_TOKEN,data);
			System.out.print(response);
			if(!JSONObject.fromObject(response).getString("code").equals("1000")){
				fail(response);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
}
	//===================================Storge=============================================
	@Test
	public void UpStorage() {//上传文件
		try {
		String filePath=HttpClientUtil.class.getResource("/1.png").getPath();
			String response= HttpClientUtil.doPostFile(Params.DOMAIN+"/storage?access_token="+Params.ACCESS_TOKEN,filePath);
			System.out.print(response);
			if(!JSONObject.fromObject(response).getString("code").equals("1000")){
				fail(response);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
}
	@Test
	public void getStorage() {//下载文件
		try {
			Map<String,String> data =new HashMap<String ,String>();
			data.put("object_name", "star888");//hour|day|week
			String response= HttpClientUtil.doGet(Params.DOMAIN+"/storage?access_token="+Params.ACCESS_TOKEN,data);
			System.out.print(response);
			if(!JSONObject.fromObject(response).getString("code").equals("1000")){
				fail(response);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
}
	//================================monitor========================================================
	 @Test
		public void getMonitorInfo(){
		 try {
				Map<String,String> data =new HashMap<String ,String>();
				data.put("time_range", "hour");//hour|day|week
				data.put("http_type", "http");//http|https|all
				
				String response= HttpClientUtil
						.doGet(Params.DOMAIN+"/monitor/"+Params.APPID+"?access_token="+ACCESS_TOKEN,data);
				System.out.print(response);
				if(!JSONObject.fromObject(response).getString("code").equals("1000")){
					fail(response);
				}
				
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
	 //=======================================Bills=========================================================
	 @Test
		public void geAllPrice(){
		 try {
				Map<String,String> data =new HashMap<String ,String>();
				data.put("resource_type", "all");//memcache|redis|s3|mysql|app|all
							
				String response= HttpClientUtil
						.doGet(Params.DOMAIN+"/bills/price?access_token="+ACCESS_TOKEN,data);
				System.out.print(response);
				if(!JSONObject.fromObject(response).getString("code").equals("1000")){
					fail(response);
				}
				
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
	 @Test
		public void getAmountOfResource(){//获取一种或多种资源在一段时间内的总金额
		 try {
				Map<String,String> data =new HashMap<String ,String>();
				data.put("resource_type", "all");//memcache|redis|s3|mysql|app|all
				data.put("begin_time", URLEncoder.encode("2014-04-23 19:55:02","utf-8"));
				data.put("end_time", URLEncoder.encode("2014-04-24  15:00:00","utf-8"));
				//data.put("appid", "all");
				
				String response= HttpClientUtil
						.doGet(Params.DOMAIN+"/bills/resources/amount?access_token="+ACCESS_TOKEN,data);
				System.out.print(response);
				if(!JSONObject.fromObject(response).getString("code").equals("1000")){
					fail(response);
				}
				
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
	    @Test
		public void getBillOfResource(){//获取一种或多种资源在一段时间内的消费账单，分页
		 try {
				Map<String,String> data =new HashMap<String ,String>();
				data.put("resource_type", "mysql");//memcache|redis|s3|mysql|app|all
				data.put("begin_time", URLEncoder.encode("2014-04-23 19:55:02","utf-8"));
				data.put("end_time", URLEncoder.encode("2014-04-24  15:00:00","utf-8"));
				data.put("cur_page", "1");
				data.put("page_size", "1");
				//data.put("appid", "all");
				String response= HttpClientUtil
						.doGet(Params.DOMAIN+"/bills/resources?access_token="+ACCESS_TOKEN,data);
				System.out.print(response);
				if(!JSONObject.fromObject(response).getString("code").equals("1000")){
					fail(response);
				}
				
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
	 @Test
		public void getDetailBillOfResource(){//获取一种或多种资源在一段时间内的消费账单，分页
		 try {
				Map<String,String> data =new HashMap<String ,String>();
				data.put("resource_type", "mysql");//memcache|redis|s3|mysql|app|all
				data.put("begin_time", URLEncoder.encode("2014-04-23 19:55:02","utf-8"));
				data.put("end_time", URLEncoder.encode("2014-04-24  15:00:00","utf-8"));
				data.put("cur_page", "1");
				data.put("page_size", "5");
				data.put("instance_id", Params.INSTANCEID);
				String response= HttpClientUtil
						.doGet(Params.DOMAIN+"/bills/resources/details?access_token="+ACCESS_TOKEN,data);
				System.out.print(response);
				if(!JSONObject.fromObject(response).getString("code").equals("1000")){
					fail(response);
				}
				
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
	 //==========================================Account================================
	 @Test
		public void dePositToUser() {//给某个用户充值
			try {
				Map<String,String> data =new HashMap<String ,String>();
				data.put("userid", "starwang");
				data.put("orderid", String.valueOf(System.currentTimeMillis()));
				data.put("order_type", "system_in");//system_in  cash_in  cash_out
				data.put("money", "1");
				data.put("order_user", "1881060513");
				data.put("bank", "888");
				data.put("status", "success");
				//System.out.println(RandomStringUtils.random(6));
				String response= HttpClientUtil
						.doPost(Params.DOMAIN+"/account/deposit?access_token="+ACCESS_TOKEN,data);
				System.out.print(response);
				if(!JSONObject.fromObject(response).getString("code").equals("1000")){
					fail(response);
				}
				
			} catch (Exception e) {
				e.printStackTrace();
			}
	}
	 @Test
		public void getDePositInfo() {//充值
			try {
				Map<String,String> data =new HashMap<String ,String>();
					
				data.put("order_type", "all");//system_in  cash_in  cash_out
				data.put("begin_time", URLEncoder.encode("2014-04-23 19:55:02","utf-8"));
				data.put("end_time", URLEncoder.encode("2014-04-23 19:55:02","utf-8"));
				data.put("cur_page", "1");
				data.put("page_size", "5");
				String response= HttpClientUtil
						.doGet(Params.DOMAIN+"/account/deposit?access_token="+ACCESS_TOKEN,data);
				System.out.print(response);
				if(!JSONObject.fromObject(response).getString("code").equals("1000")){
					fail(response);
				}
				
			} catch (Exception e) {
				e.printStackTrace();
			}
	}
	 @Test
		public void getAccount() {//充值
			try {
			
				String response= HttpClientUtil
						.doGet(Params.DOMAIN+"/account?access_token="+ACCESS_TOKEN);
				System.out.print(response);
				if(!JSONObject.fromObject(response).getString("code").equals("1000")){
					fail(response);
				}
				
			} catch (Exception e) {
				e.printStackTrace();
			}
	}
@Test
	public void checkOrder() {//获取某个order是否存在
		try {

			String orderid="18810d606513";
			String response= HttpClientUtil
					.doGet(Params.DOMAIN+"/account/"+orderid+"/check?access_token="+ACCESS_TOKEN);
			System.out.print(response);
			if(!JSONObject.fromObject(response).getString("code").equals("1000")){
				fail(response);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
}
@Test
public void reminder() {//获取某个order是否存在
	try {

		Map<String,String> data =new HashMap<String ,String>();
		data.put("status", "open");//open close		
		data.put("min_quota", "88");
		String response= HttpClientUtil
				.doPost(Params.DOMAIN+"/account/reminder?access_token="+ACCESS_TOKEN,data);
		System.out.print(response);
		if(!JSONObject.fromObject(response).getString("code").equals("1000")){
			fail(response);
		}
		
	} catch (Exception e) {
		e.printStackTrace();
	}
}
}
